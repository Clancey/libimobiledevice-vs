jobs:
- job: windows
  strategy:
    maxParallel: 4
    matrix:
      x64:
        BUILD_ARCH: x64
        PLATFORM: x64
        RID: win-x64
      x86:
        BUILD_ARCH: x86
        PLATFORM: x86
        RID: win-x86
  pool:
    vmImage: 'windows-2019'
  steps:
  - script: |
      get-source.cmd
    displayName: Get libimobiledevice source code
  - script: |
      %VCPKG_INSTALLATION_ROOT%\vcpkg version
      %VCPKG_INSTALLATION_ROOT%\vcpkg integrate install
      echo.set(VCPKG_BUILD_TYPE %CONFIGURATION%)>> %VCPKG_INSTALLATION_ROOT%\triplets\%BUILD_ARCH%-windows.cmake
      cat %VCPKG_INSTALLATION_ROOT%\triplets\%BUILD_ARCH%-windows.cmake
      %VCPKG_INSTALLATION_ROOT%\vcpkg install libiconv:%BUILD_ARCH%-windows zlib:%BUILD_ARCH%-windows openssl:%BUILD_ARCH%-windows dirent:%BUILD_ARCH%-windows getopt:%BUILD_ARCH%-windows curl:%BUILD_ARCH%-windows libzip:%BUILD_ARCH%-windows libxml2:%BUID_ARCH%-windows
    displayName: Install dependencies
  - task: MSBuild@1
    inputs:
      solution: 'libimobiledevice-vs.sln' 
      platform: $(PLATFORM)
      configuration: Release
    displayName: 'Release build'
  - script: |
      mkdir %BUILD_ARTIFACTSTAGINGDIRECTORY%\libimobiledevice\%RID%\bin\
      mkdir %BUILD_ARTIFACTSTAGINGDIRECTORY%\libimobiledevice\%RID%\licenses\
      mkdir %BUILD_ARTIFACTSTAGINGDIRECTORY%\libimobiledevice\%RID%\gitinfo\
      mkdir %BUILD_ARTIFACTSTAGINGDIRECTORY%\libimobiledevice\%RID%\sources\

      # Copy artifacts
      copy %PLATFORM%\Release\*.dll %BUILD_ARTIFACTSTAGINGDIRECTORY%\libimobiledevice\%RID%\bin\
      copy %PLATFORM%\Release\*.exe %BUILD_ARTIFACTSTAGINGDIRECTORY%\libimobiledevice\%RID%\bin\
      copy %PLATFORM%\Release\*.pdb %BUILD_ARTIFACTSTAGINGDIRECTORY%\libimobiledevice\%RID%\bin\

      # Copy vcpkg licenses
      copy %VCPKG_INSTALLATION_ROOT%\installed\%BUILD_ARCH%-windows\share\libxml2\copyright %BUILD_ARTIFACTSTAGINGDIRECTORY%\libimobiledevice\%RID%\licenses\libxml2.copyright
      copy %VCPKG_INSTALLATION_ROOT%\installed\%BUILD_ARCH%-windows\share\libiconv\copyright %BUILD_ARTIFACTSTAGINGDIRECTORY%\libimobiledevice\%RID%\licenses\libiconv.copyright
      copy %VCPKG_INSTALLATION_ROOT%\installed\%BUILD_ARCH%-windows\share\liblzma\copyright %BUILD_ARTIFACTSTAGINGDIRECTORY%\libimobiledevice\%RID%\licenses\liblzma.copyright
      copy %VCPKG_INSTALLATION_ROOT%\installed\%BUILD_ARCH%-windows\share\curl\copyright %BUILD_ARTIFACTSTAGINGDIRECTORY%\libimobiledevice\%RID%\licenses\libcurl.copyright
      
      # Copy git licenses
      copy libplist\COPYING.LESSER %BUILD_ARTIFACTSTAGINGDIRECTORY%\libimobiledevice\%RID%\licenses\libplist.library.copyright
      copy libplist\COPYING %BUILD_ARTIFACTSTAGINGDIRECTORY%\libimobiledevice\%RID%\licenses\libplist.utilities.copyright
      
      copy libusbmuxd\COPYING %BUILD_ARTIFACTSTAGINGDIRECTORY%\libimobiledevice\%RID%\licenses\libusbmuxd.copyright
      
      copy libimobiledevice\COPYING.LESSER %BUILD_ARTIFACTSTAGINGDIRECTORY%\libimobiledevice\%RID%\licenses\libimobiledevice.library.copyright
      copy libimobiledevice\COPYING %BUILD_ARTIFACTSTAGINGDIRECTORY%\libimobiledevice\%RID%\licenses\libimobiledevice.utilities.copyright
      
      copy libideviceactivation\COPYING.LESSER %BUILD_ARTIFACTSTAGINGDIRECTORY%\libimobiledevice\%RID%\licenses\libideviceactivation.library.copyright
      copy libideviceactivation\COPYING %BUILD_ARTIFACTSTAGINGDIRECTORY%\libimobiledevice\%RID%\licenses\libideviceactivation.utilities.copyright

      # Copy git version information
      git -C libplist rev-parse HEAD >>  %BUILD_ARTIFACTSTAGINGDIRECTORY%\libimobiledevice\%RID%\gitinfo\libplist
      git -C libplist config --get remote.origin.url >>  %BUILD_ARTIFACTSTAGINGDIRECTORY%\libimobiledevice\%RID%\gitinfo\libplist

      git -C libusbmuxd rev-parse HEAD >>  %BUILD_ARTIFACTSTAGINGDIRECTORY%\libimobiledevice\%RID%\gitinfo\libusbmuxd
      git -C libusbmuxd config --get remote.origin.url >>  %BUILD_ARTIFACTSTAGINGDIRECTORY%\libimobiledevice\%RID%\gitinfo\libusbmuxd

      git -C libimobiledevice rev-parse HEAD >>  %BUILD_ARTIFACTSTAGINGDIRECTORY%\libimobiledevice\%RID%\gitinfo\libimobiledevice
      git -C libimobiledevice config --get remote.origin.url >>  %BUILD_ARTIFACTSTAGINGDIRECTORY%\libimobiledevice\%RID%\gitinfo\libimobiledevice

      git -C libideviceactivation rev-parse HEAD >>  %BUILD_ARTIFACTSTAGINGDIRECTORY%\libimobiledevice\%RID%\gitinfo\libideviceactivation
      git -C libideviceactivation config --get remote.origin.url >>  %BUILD_ARTIFACTSTAGINGDIRECTORY%\libimobiledevice\%RID%\gitinfo\libideviceactivation

      # Get tarballs
      git -C libplist archive --format tar.gz -o $BUILD_ARTIFACTSTAGINGDIRECTORY/libimobiledevice/%RID%/sources/libplist.orig.tar.gz
      git -C libusbmuxd archive --format tar.gz -o $BUILD_ARTIFACTSTAGINGDIRECTORY/libimobiledevice/%RID%/sources/libusbmuxd.orig.tar.gz
      git -C libimobiledevice archive --format tar.gz -o $BUILD_ARTIFACTSTAGINGDIRECTORY/libimobiledevice/%RID%/sources/libimobiledevice.orig.tar.gz
      git -C libideviceactivation archive --format tar.gz -o $BUILD_ARTIFACTSTAGINGDIRECTORY/libimobiledevice/%RID%/sources/libideviceactivation.orig.tar.gz
    displayName: 'Prepare artifact'
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)/libimobiledevice' 
      artifactName: 'libimobiledevice' 
      publishLocation: 'Container'
    displayName: Publish

- job: macos
  pool:
    vmImage: 'xcode9-macos10.13'
  variables:
    TARGET: x86_64-apple-darwin
    RID: 
  steps:
  - script: |
      get-source.cmd
    displayName: Get libimobiledevice source code
  - script: |
      brew install autoconf automake libtool pkg-config
    displayName: Install autotools
  - script: |
      cd libplist
      ./autogen.sh --host=$TARGET --without-cython --enable-static=no --enable-shared=yes
      make
      make install
    displayName: Build libplist
  - script: |
      cd libusbmuxd
      ./autogen.sh --host=$TARGET --without-cython --enable-static=no --enable-shared=yes
      make
      make install
    displayName: Build libusbmuxd
  - script: |
      cd libimobiledevice
      ./autogen.sh --host=$TARGET --without-cython --enable-static=no --enable-shared=yes
      make
      make install
    displayName: Build libimobiledevice
  - script: |
      cd libideviceactivation
      ./autogen.sh --host=$TARGET --without-cython --enable-static=no --enable-shared=yes
      make
      make install
    displayName: Build libideviceactivation

- job: macos
  pool:
    vmImage: 'xcode9-macos10.13'
  variables:
    TARGET: x86_64-apple-darwin
    RID: osx-x64
  steps:
  - script: |
      get-source.cmd
    displayName: Get libimobiledevice source code
  - script: |
      brew install autoconf automake libtool pkg-config
    displayName: Install autotools
  - template: build-unix.yaml

- job: ubuntu_xenial
  variables:
    TARGET: x86_64-unknown-linux-gnu
    RID: ubuntu.16.04-x64
    CFLAGS: -fPIC
  pool:
    vmImage: 'ubuntu-16.04'
  container:
    image: ubuntu:16.04
    options: "--name ci-container -v /usr/bin/docker:/tmp/docker:ro"
  steps:
  - script: |
      /tmp/docker exec -t -u 0 ci-container \
      sh -c "apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confold" -y install sudo"
    displayName: Set up sudo
  - script: |
      sudo apt-get update
      sudo apt-get upgrade -y
      sudo apt-get install -y --no-install-recommends lsb-release automake make libtool clang libssl-dev gnupg pkg-config
    displayName: Install build dependencies
  - script: |
      get-source.cmd
    displayName: Get libimobiledevice source code
  - template: build-unix.yaml